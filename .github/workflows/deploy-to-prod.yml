name: Publish Production Clamify API to Kubernetes

on:
  release:
    types: [published]

env:
  DOTNET_VERSION: '6.0.302' # The .NET SDK version to use

jobs:
  build:
    name: Build the API
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install Dependencies
      run: dotnet restore

    - name: Run Build (Fail on Linter Warnings)
      run: dotnet build /warnaserror

  test:
    name: Test API
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run Unit and Integration Tests
        run: dotnet test clamify-api.sln

  push-to-registry:
    name: Push Image to GitHub Packages
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Add Version to Dockerfile
        run: sed -i 's/v0.0.0/${{ github.sha }}/g' Dockerfile

      - name: Setup Docker Builder
        uses: docker/setup-buildx-action@v2

      - name: Authenticate Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push New Image to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest

  deploy:
    name: Deploy to Kubernetes Cluster
    needs: push-to-registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to Cluster
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 clamify-cluster

      - name: Apply the Deployment File
        run: kubectl set image deployment/clamify-api clamify-api=ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Verify Deployment Rollout
        run: kubectl rollout status deployment/clamify-api
